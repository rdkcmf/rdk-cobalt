# Copyright 2022 The Cobalt Authors. All Rights Reserved.
# Copyright 2022 Collabora Ltd. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

config("compiler_flags") {
  cflags = []
  cflags_c = []
  cflags_cc = []
  defines = []
  ldflags = []

  defines += [
    # Cobalt on Linux flag
    "COBALT_LINUX",
    "__STDC_FORMAT_MACROS",  # so that we get PRI*
    # Enable GNU extensions to get prototypes like ffsl.
    "_GNU_SOURCE=1",
  ]

  if (is_debug) {
    cflags += [ "-O0" ]
  } else if (is_devel) {
    cflags += [ "-O2" ]
  } else {
    cflags += [ "-Wno-unused-but-set-variable" ]
  }

  ldflags += [
    # Cleanup unused sections
    "-Wl,-gc-sections",
    # We don't wrap these symbols, but this ensures that they aren't
    # linked in.
    "-Wl,--wrap=reallocalign",
    "-Wl,--wrap=malloc_usable_size",
    "-Wl,--wrap=malloc_stats_fast",
    "-Wl,--wrap=eglGetDisplay",
  ]

  cflags += [
    "-fvisibility=hidden",
    # Force char to be signed.
    "-fsigned-char",
    # Disable strict aliasing.
    "-fno-strict-aliasing",

    "-fno-delete-null-pointer-checks",

    # To support large files
    "-D_FILE_OFFSET_BITS=64",

    # Suppress some warnings that will be hard to fix.
    "-Wno-reorder",
    "-Wno-sign-compare",
    "-Wno-unused-local-typedefs",
    "-Wno-unused-result",
    "-Wno-unused-function",
    "-Wno-deprecated-declarations",
    "-Wno-missing-field-initializers",
    "-Wno-extra",
    "-Wno-comment",  # Talk to my lawyer.
    "-Wno-narrowing",
    "-Wno-unknown-pragmas",
    "-Wno-type-limits",  # TODO: We should actually look into these.
    # It's OK not to use some input parameters. Note that the order
    # matters: Wall implies Wunused-parameter and Wno-unused-parameter
    # has no effect if specified before Wall.
    "-Wno-unused-parameter",
    # Generated by many starboard implementation files.
    "-Wno-unused-variable",
    "-Wno-expansion-to-defined",
    "-Wno-implicit-fallthrough",
  ]

  if (!cobalt_fastbuild && (is_qa || is_gold)) {
    cflags += [ "-g1" ]
  }

  cflags_c += [ "-std=c11" ]
  cflags_cc += [
    "-Wno-literal-suffix",
    "-Wno-deprecated-copy",
    "-Wno-invalid-offsetof",
    "-Wno-ignored-qualifiers",
    "-Wno-pessimizing-move",
  ]
}

config("platform_configuration") {
  if (current_toolchain != host_toolchain) {
    libs = [
      "EGL",
      "GLESv2",
      "pthread",
    ]
  }

  configs = [
    ":compiler_flags",
    "//build/config/compiler:rtti",
  ]
}

config("speed") {
  cflags = [ "-O2" ]

  if (is_qa || is_gold) {
    cflags += [ "-fno-exceptions" ]
  }
}

config("size") {
  cflags = [ "-Os" ]

  if (is_qa || is_gold) {
    cflags += [ "-fno-exceptions" ]
  }
}

config("pedantic_warnings") {
  cflags = [
    "-Wall",
    "-Wextra",
    "-Wunreachable-code",
    "-Wno-maybe-uninitialized",
  ]
}

config("no_pedantic_warnings") {
  cflags = [
    # Do not warn for implicit type conversions that may change a value.
    "-Wno-conversion",
  ]
}
